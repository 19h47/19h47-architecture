/**
 * Basic typography style for copy text
 */

html {
	font: {
		size: 62.5%;
	}
}

body {
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font: {
		family: map-get( map-get( $font, families ), body );
		size: $base-font-size-px;
		weight: map-get( map-get( $font, weights ), regular );
	}

	/* stylelint-disable-next-line */
	line-height: ( $base-line-height / $base-font-size ) * 1em;
	text-rendering: optimizeLegibility;
}

// @include reset-selection( get_color( black ), get_color( white ) );

/**
 * Titles
 *
 * Construct each titles tags and associate classes
 *
 * @param   $font-size      font-size (px without unit)
 * @param   $line-height    line-height (px whithout unit)
 * @param   $weight         font-weight (from .psd)
 * @param   $family         font-family (variable)
 * @param   $letter-spacing letter-spacing (from .psd)
 * @type    nested map
 * @author  Jérémy Levron   <jeremylevron@19h47.fr> (http://19h47.fr)
 */
$titles: (
	h1: (
		38,
		58.52,
		map-get( map-get( $font, weights ), bold ),
		map-get( map-get( $font, families ), title ),
		0
	),

	h2: (
		18,
		27,
		map-get( map-get( $font, weights ), semibold ),
		map-get( map-get( $font, families ), body ),
		0
	),

	h3: (
		18,
		19,
		map-get( map-get( $font, weights ), extrablack ),
		map-get( map-get( $font, families ), body ),
		0
	),

	h4: (
		16,
		19,
		map-get( map-get( $font, weights ), extrablack ),
		map-get( map-get( $font, families ), body ),
		0
	),
);


/**
 * Loop through $titles
 *
 * Each $key and $value find in $titles
 */
@each $title, $value in $titles {
	/**
	 * Private var
	 *
	 * Get and stock all values from each keys in map
	 */
	$font-size: nth( $value, 1 );
	$line-height: nth( $value, 2 );
	$weight: nth( $value, 3 );
	$family: nth( $value, 4 );
	$letter-spacing: nth( $value, 5 );


	// Generate tag and class selector
	#{ $title },
	.#{ $title } {
		// Include mixin
		@include letter-spacing( $letter-spacing );

		@include margin (
			top 1em
			bottom 0.5em
		);

		@if $line-height == normal {
			line-height: normal;
		}

		@else {
			line-height: $line-height / $font-size;
		}

		font: {
			family: $family;
			size: ( $font-size / 10 ) * 1rem;
			weight: $weight;
		}
	}
};
